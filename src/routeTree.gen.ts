/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HistoryRouteImport } from './routes/history'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NewChar123DataChar125RouteImport } from './routes/new.{-$data}'
import { Route as GameDataRouteImport } from './routes/game.$data'

const HistoryRoute = HistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewChar123DataChar125Route = NewChar123DataChar125RouteImport.update({
  id: '/new/{-$data}',
  path: '/new/{-$data}',
  getParentRoute: () => rootRouteImport,
} as any)
const GameDataRoute = GameDataRouteImport.update({
  id: '/game/$data',
  path: '/game/$data',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/game/$data': typeof GameDataRoute
  '/new/{-$data}': typeof NewChar123DataChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/game/$data': typeof GameDataRoute
  '/new/{-$data}': typeof NewChar123DataChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/game/$data': typeof GameDataRoute
  '/new/{-$data}': typeof NewChar123DataChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/history' | '/game/$data' | '/new/{-$data}'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/history' | '/game/$data' | '/new/{-$data}'
  id: '__root__' | '/' | '/history' | '/game/$data' | '/new/{-$data}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HistoryRoute: typeof HistoryRoute
  GameDataRoute: typeof GameDataRoute
  NewChar123DataChar125Route: typeof NewChar123DataChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new/{-$data}': {
      id: '/new/{-$data}'
      path: '/new/{-$data}'
      fullPath: '/new/{-$data}'
      preLoaderRoute: typeof NewChar123DataChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$data': {
      id: '/game/$data'
      path: '/game/$data'
      fullPath: '/game/$data'
      preLoaderRoute: typeof GameDataRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HistoryRoute: HistoryRoute,
  GameDataRoute: GameDataRoute,
  NewChar123DataChar125Route: NewChar123DataChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
